plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
    id 'idea'
    id 'groovy'
}

group = 'me.gogosing'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'

    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.apache.commons:commons-lang3:3.10'

    implementation 'com.querydsl:querydsl-apt'
    implementation 'com.querydsl:querydsl-jpa'

    implementation 'org.flywaydb:flyway-core'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'mysql:mysql-connector-java'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.spockframework:spock-core:1.2-groovy-2.4')
    testCompile('org.spockframework:spock-spring:1.2-groovy-2.4')
    testCompile('nl.jqno.equalsverifier:equalsverifier:2.5.1')

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

ext {
    querydslSrcDir = "$buildDir/generated/querydsl"
}

compileQuerydsl {
    delete "./src/main/generated/"
    options.annotationProcessorPath = configurations.querydsl
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", querydslSrcDir]
        }
    }
}

configurations {
    querydsl.extendsFrom compileClasspath
}

tasks.withType(Test) {
    useJUnitPlatform()
}